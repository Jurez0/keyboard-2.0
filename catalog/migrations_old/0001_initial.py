# Generated by Django 4.2.3 on 2023-07-24 08:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(limit_choices_to={'model__in': ('pcb', 'switch', 'keyboard', 'keycap')}, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'ordering': ['object_id'],
            },
        ),
        migrations.CreateModel(
            name='Switch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('color', models.CharField(max_length=20)),
                ('switch_type', models.CharField(choices=[('LN', 'Linear'), ('TС', 'Tactile'), ('CL', 'Clicky')], max_length=2)),
                ('strength', models.IntegerField()),
                ('resource', models.IntegerField()),
                ('perem_for_relete', models.ManyToManyField(related_name='catalog_switch_related', related_query_name='switch', to='catalog.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PCB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('color', models.CharField(max_length=20)),
                ('kb_format', models.CharField(choices=[('100', 'Fullsize'), ('80', 'TKL'), ('75', '75%'), ('65', '65%'), ('60', '60%'), ('40', '40%')], max_length=3)),
                ('hot_swap', models.BooleanField(default=False)),
                ('kb_connect', models.CharField(choices=[('WR', 'Wire'), ('BT', 'Bluetooth'), ('WF', '2.4 GHz'), ('Al', 'All 3')], max_length=2)),
                ('kb_material', models.CharField(choices=[('PL', 'Plastic'), ('AL', 'Aluminum')], max_length=2)),
                ('kb_light', models.CharField(choices=[('R', 'Red'), ('B', 'Blue'), ('W', 'White'), ('RGB', 'RGB')], max_length=3)),
                ('perem_for_relete', models.ManyToManyField(related_name='catalog_pcb_related', related_query_name='pcb', to='catalog.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KeyCap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('color', models.CharField(max_length=20)),
                ('kc_material', models.CharField(choices=[('PBT', 'PBT'), ('ABS', 'ABS')], max_length=3)),
                ('kc_profile', models.CharField(choices=[('SA', 'SA'), ('TAI', 'TAI'), ('KAT', 'KAT'), ('OEM', 'OEM'), ('CHR', 'CHR'), ('XDA', 'XDA')], max_length=3)),
                ('double_Shot', models.BooleanField(default=False)),
                ('rus_layout', models.BooleanField(default=False)),
                ('perem_for_relete', models.ManyToManyField(related_name='catalog_keycap_related', related_query_name='keycap', to='catalog.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Keyboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('color', models.CharField(max_length=20)),
                ('kb_format', models.CharField(choices=[('100', 'Fullsize'), ('80', 'TKL'), ('75', '75%'), ('65', '65%'), ('60', '60%'), ('40', '40%')], max_length=3)),
                ('Hot_Swap', models.BooleanField(default=False)),
                ('kb_connect', models.CharField(choices=[('WR', 'Wire'), ('BT', 'Bluetooth'), ('WF', '2.4 GHz'), ('Al', 'All 3')], max_length=2)),
                ('kb_material', models.CharField(choices=[('PL', 'Plastic'), ('AL', 'Aluminum')], max_length=2)),
                ('kb_light', models.CharField(choices=[('R', 'Red'), ('B', 'Blue'), ('W', 'White'), ('RGB', 'RGB')], max_length=3)),
                ('switch_type', models.CharField(choices=[('LN', 'Linear'), ('TС', 'Tactile'), ('CL', 'Clicky')], max_length=2)),
                ('strength', models.IntegerField()),
                ('resource', models.IntegerField()),
                ('perem_for_relete', models.ManyToManyField(related_name='catalog_keyboard_related', related_query_name='keyboard', to='catalog.product')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
